{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","utils/DefaultDict.js","components/MainPage/Header.js","components/util/DropDownButton.js","elements/H1.js","elements/H3.js","elements/H4.js","elements/Input.js","elements/Label.js","elements/Button.js","elements/AccordionButton.js","elements/List.js","elements/Wrapper.js","elements/DeleteButton.js","elements/Link.js","elements/CheckMarkButton.js","elements/AccordionContent.js","components/MainPage/Ingredient.js","components/MainPage/Ingredients.js","components/SVG/CheveronSvg.js","components/MainPage/SelectRecipeButton.js","components/MainPage/Recipe.js","components/SVG/SettingSvg.js","components/MainPage/RecipeList.js","components/MainPage/AddRecipe.js","components/MainPage/Options.js","components/MainPage/ShoppingListOptions.js","components/MainPage/ShoppingListIngredient.js","components/MainPage/ShoppingListGrocerySection.js","components/MainPage/ShoppingListPopUp.js","pages/MainPage.jsx","pages/404.jsx","components/SVG/HomeSvg.js","components/Settings/Options.js","components/Settings/GrocerySection.js","components/Settings/SetUpGrocerySections.js","components/Settings/UserSettings.js","pages/Settings.jsx","App.js","index.js"],"names":["state","action","type","recipeMap","payload","forEach","recipe","addToShoppingList","editing","_id","recipes","index","ingredients","indexOf","splice","push","Object","entries","ingredient","shoppingList","grocerySectionIngredientsMap","grocerySection","name","console","log","grocerySections","sections","section","keys","key","creatingShoppingList","sectionName","defaultSection","default","sectionIndex","error","initialState","defaultInit","Proxy","get","target","valueOf","Array","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","getGrocerySections","getRecipes","getShoppingList","axios","res","data","id","delete","config","headers","post","recipeId","ingredientObj","Provider","value","onStartUp","deleteRecipe","addRecipe","deleteRecipeIngredient","addRecipeIngredient","setCreateShoppingListBool","cancelOrClose","addRecipeToShoppingList","saveAddedRecipes","addIngredientToShoppingListSection","clearShoppingList","empty","length","addGrocerySection","deleteGrocerySection","setDefaultGrocerySection","saveEditedRecipe","H1","styled","h1","Header","DropDownButton","handleChange","recipeObj","setRecipeObjFunc","useState","setGrocerySection","handleChangeLocal","text","active","editRecipe","slice","DropdownButton","className","drop","size","variant","title","map","Dropdown","Item","onClick","e","eventKey","h3","h4","input","props","isRecipeWebsite","isShoppingListIngredient","isRecipeServings","isGrocerySection","isRecipeIngredient","label","button","isShoppingListOption","span","isShoppingList","li","isIngredient","isRecipe","isForm","isGrocerySectionHeader","ingredientCount","AccordionButton","div","Wrapper","Link","available","maxHeight","Div","Ingredient","handleDeleteIngredient","useContext","List","DeleteButton","Input","placeholder","onChange","handleInputChange","Form","form","Table","table","TableBody","tbody","TR","tr","TD","td","isRight","Ingredients","handleAddIngredient","newIngredientGrocerySection","setNewIngredientGrocerySection","newIngredient","setNewIngredient","onSubmit","preventDefault","newIgredient","required","colSpan","Button","AccordionIcon","svg","rotate","CheveronSvg","xmlns","viewBox","d","CheckMarkStyle","SelectRecipeButton","recipe_id","CheckMarkButton","Ul","ul","Li","large","StyledLink","Span","isSave","Recipe","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","setRecipeObj","content","useRef","toggleAccordion","current","scrollHeight","handleEditingClicks","URL","isEdit","href","med","Label","min","max","servings","AccordionContent","ref","SettingsIcon","SettingsSvg","RecipeList","useEffect","to","H3","AddRecipe","setRecipeName","setServings","setRecipeURL","errors","setErrors","url","test","isAddRecipeButton","clicked","top","Options","togglePopUpFunc","middle","bottom","ExitButton","ShoppingListOptions","downloadShoppingListFunc","setClearSwitchFunc","handleClick","call","lineThrough","ShoppingListIngredient","ShoppingListGrocerySection","clearSwitch","placeHolderText","handleOnClick","onKeyDown","ShoppingListDiv","ShoppingListContent","ShoppingListPopUp","setClearSwitch","responseType","params","then","response","window","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","Container","MainPage","showPopUp","setShowPopUp","togglePopUp","NotFound","HomeIcon","HomeSvg","preserveAspectRatio","transform","fill","stroke","isLink","settingLabels","selectSettingPage","ButtonWrapper","GrocerySection","sectionLabel","isDefault","setErrorsFunc","checked","SetUpGrocerySections","setPlaceHolderText","errs","foundMatch","toLowerCase","UserSettings","H4","Settings","settingsMap","activeOption","setActiveOption","GlobalStyle","createGlobalStyle","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7bb38f68.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n        //////////////////////////////////////////////////////////////\r\n        // RECIPES\r\n        // Build recipe map for saved recipes in action.payload\r\n        // addToShoppingList, editing not saved in db\r\n        case \"GET_RECIPES\":\r\n            let recipeMap = {};\r\n            action.payload.forEach((recipe) => {\r\n                recipe.addToShoppingList = false;\r\n                recipe.editing = false;\r\n                recipeMap[recipe._id] = recipe;\r\n            });\r\n            return {\r\n                ...state,\r\n                recipes: recipeMap,\r\n            };\r\n\r\n        //Delete recipe with id == action.payload\r\n        case \"DELETE_RECIPE\":\r\n            delete state.recipes[action.payload];\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n            };\r\n\r\n        //Add recipe contained in action.payload\r\n        case \"ADD_RECIPE\":\r\n            action.payload.addToShoppingList = false;\r\n            state.recipes[action.payload._id] = action.payload;\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n            };\r\n\r\n        //Delete ingredient from recipe._id == action.payload[0]\r\n        //ingredient == action.payload[1]\r\n        case \"DELETE_RECIPE_INGREDIENT\":\r\n            let index = state.recipes[action.payload[0]].ingredients.indexOf(action.payload[1]);\r\n            if (index !== -1) state.recipes[action.payload[0]].ingredients.splice(index, 1);\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n            };\r\n\r\n        // Add new ingredient for recipe with _id == action.payload[0]\r\n        // Ingredient == action.payload[1]\r\n        case \"ADD_RECIPE_INGREDIENT\":\r\n            state.recipes[action.payload[0]].ingredients.push(action.payload[1]);\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n            };\r\n\r\n        // Set or unset recipe addToShoppingList bool\r\n        case \"SET_RECIPE_FOR_SHOPPING_LIST\":\r\n            state.recipes[action.payload].addToShoppingList = !state.recipes[action.payload].addToShoppingList;\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n            };\r\n\r\n        // Save all selected recipe ingredients to shopping list\r\n        // Search for all recipes with addToShoppingList === true\r\n        case \"SAVE_RECIPES_ADDED_TO_SHOPPING_LIST\":\r\n            Object.entries(state.recipes).forEach(([_id, recipe]) => {\r\n                if (recipe.addToShoppingList === true) {\r\n                    Object.entries(recipe.ingredients).forEach(([index, ingredient]) => {\r\n                        state.shoppingList.grocerySectionIngredientsMap[ingredient.grocerySection].push({ _id: ingredient._id, name: ingredient.name });\r\n                    });\r\n                    // Unset to make clear ingredients were added and avoid duplicate button presses\r\n                    recipe.addToShoppingList = false;\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n                grocerySectionIngredientsMap: state.shoppingList.grocerySectionIngredientsMap,\r\n            };\r\n\r\n        // Save edited recipe\r\n        // action.payload = edited recipe\r\n        case \"SAVE_EDITED_RECIPE\":\r\n            state.recipes[action.payload._id] = action.payload;\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n            };\r\n\r\n        //////////////////////////////////////////////////////////////\r\n        // SHOPPINGLIST\r\n        // Add shoppinglist to state\r\n        // action.payload = {grocerySectionIngredientsMap}\r\n        case \"GET_SHOPPING_LIST\":\r\n            state.grocerySections.sections.forEach((section) => {\r\n                state.shoppingList.grocerySectionIngredientsMap[section] = [];\r\n            });\r\n            if (action.payload.grocerySectionIngredientsMap) {\r\n                Object.keys(action.payload.grocerySectionIngredientsMap).forEach((key) => {\r\n                    state.shoppingList.grocerySectionIngredientsMap[key] = action.payload.grocerySectionIngredientsMap[key];\r\n                });\r\n            }\r\n            state.shoppingList._id = action.payload._id;\r\n            return {\r\n                ...state,\r\n                shoppingList: state.shoppingList,\r\n            };\r\n\r\n        // Set or unset shooping list bool\r\n        // if canceling unset all selected recipes\r\n        // action.payload = \"cancle\" or \"save\"\r\n        case \"SET_CREATE_SHOPPING_LIST_BOOL\":\r\n            state.creatingShoppingList = !state.creatingShoppingList;\r\n            if (action.payload === \"cancel\") {\r\n                Object.keys(state.recipes).forEach((_id) => {\r\n                    state.recipes[_id].addToShoppingList = false;\r\n                });\r\n                return {\r\n                    ...state,\r\n                    recipes: state.recipes,\r\n                    creatingShoppingList: state.creatingShoppingList,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    creatingShoppingList: state.creatingShoppingList,\r\n                };\r\n            }\r\n\r\n        // Add manually added ingrdient to shopping list section\r\n        // action.payload = [sectionName, ingredient]\r\n        case \"ADD_INGREDIENT_TO_SHOPPING_LIST_SECTION\":\r\n            state.shoppingList.grocerySectionIngredientsMap[action.payload[0]].push(action.payload[1]);\r\n            return {\r\n                ...state,\r\n                grocerySectionIngredientsMap: state.shoppingList.grocerySectionIngredientsMap,\r\n            };\r\n\r\n        // Clear shopping list of all ingredients\r\n        case \"CLEAR_SHOPPING_LIST\":\r\n            Object.keys(state.shoppingList.grocerySectionIngredientsMap).forEach((sectionName) => {\r\n                state.shoppingList.grocerySectionIngredientsMap[sectionName] = [];\r\n            });\r\n            return {\r\n                ...state,\r\n                grocerySectionIngredientsMap: state.shoppingList.grocerySectionIngredientsMap,\r\n            };\r\n\r\n        //////////////////////////////////////////////////////////////\r\n        // GROCERYSECTIONS\r\n        // Get grocery sections\r\n        // Save grocery sections to state\r\n        case \"GET_GROCERY_SECTIONS\":\r\n            return {\r\n                ...state,\r\n                grocerySections: action.payload,\r\n            };\r\n\r\n        // Add new grocery section\r\n        // action.payload = grocery section name\r\n        case \"ADD_GROCERY_SECTION\":\r\n            state.grocerySections.sections.push(action.payload);\r\n            let tmp = state.shoppingList.grocerySectionIngredientsMap[action.payload];\r\n            return {\r\n                ...state,\r\n                grocerySections: state.grocerySections,\r\n                shoppingList: state.shoppingList,\r\n            };\r\n\r\n        // delete grocery section\r\n        // If shopping list or recipes contain ingredients for the deleted section update them to default section\r\n        // action.payload = section name\r\n        case \"DELETE_GROCERY_SECTION\":\r\n            let defaultSection = state.grocerySections.default;\r\n            let sectionName = action.payload;\r\n\r\n            let sectionIndex = state.grocerySections.sections.indexOf(sectionName);\r\n            if (sectionIndex !== -1) state.grocerySections.sections.splice(sectionIndex, 1);\r\n            Object.entries(state.recipes).forEach(([_id, recipe]) => {\r\n                recipe.ingredients.forEach((ingredient) => {\r\n                    if (ingredient.grocerySection === sectionName) {\r\n                        ingredient.grocerySection = defaultSection;\r\n                    }\r\n                });\r\n            });\r\n            state.shoppingList.grocerySectionIngredientsMap[defaultSection].push(...state.shoppingList.grocerySectionIngredientsMap[sectionName]);\r\n            delete state.shoppingList.grocerySectionIngredientsMap[sectionName];\r\n            return {\r\n                ...state,\r\n                recipes: state.recipes,\r\n                grocerySections: state.grocerySections,\r\n                shoppingList: state.shoppingList,\r\n            };\r\n\r\n        // Set grocery sectin default\r\n        // action.payload = section name\r\n        case \"SET_GROCERY_SECTION_DEFAULT\":\r\n            state.grocerySections.default = action.payload;\r\n            return {\r\n                ...state,\r\n                grocerySections: state.grocerySections,\r\n            };\r\n\r\n        //ERRORS\r\n        case \"RECIPE_ERROR\":\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        case \"SETTINGS_ERROR\":\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport axios from \"axios\";\r\nimport DefaultDict from \"../utils/DefaultDict\";\r\n\r\n// Initial state\r\nconst initialState = {\r\n    grocerySections: {\r\n        /* PERSISTS\r\n            default, string\r\n            sections, array of strings\r\n        */\r\n        default: \"\",\r\n        sections: [],\r\n    },\r\n\r\n    recipes: {\r\n        /*PERSISTS\r\n            RecipeObjectId: string\r\n                reipe:\r\n                    __v, int\r\n                    _id, string\r\n                    name, string\r\n                    servings, int\r\n                    URL, string\r\n                    createdAt, string\r\n                    ingredients: [{ingredient}] array of ingredients \r\n                        name,\r\n                        grocerySection,\r\n                        _id\r\n                    //not saved to db\r\n                    addToShoppingList, bool\r\n        */\r\n    },\r\n    shoppingList: {\r\n        /* PERSISTS\r\n            _id, objectID\r\n            grocerySectionIngredientMap, {sectionsName: [ingredients] ...}\r\n        */\r\n        _id: -1,\r\n        grocerySectionIngredientsMap: new DefaultDict(Array), //dont want key errors\r\n    },\r\n    creatingShoppingList: false,\r\n    error: null,\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //On start up get recipes and grocery sections\r\n    //Get recipes grocery sections then recipes to avoid incomplete data\r\n    async function onStartUp() {\r\n        await getGrocerySections();\r\n        await getRecipes();\r\n        await getShoppingList();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////\r\n    // RECIPES\r\n    //Get all recipes and add to state\r\n    async function getRecipes() {\r\n        try {\r\n            const res = await axios.get(\"/api/v1/recipes\");\r\n            dispatch({\r\n                type: \"GET_RECIPES\",\r\n                payload: res.data.data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Delete specific recipe\r\n    async function deleteRecipe(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/recipes/${id}`);\r\n            dispatch({\r\n                type: \"DELETE_RECIPE\",\r\n                payload: id,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Add recipe with current content (no ingredients yet)\r\n    async function addRecipe(recipe) {\r\n        console.log(recipe);\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        try {\r\n            const res = await axios.post(\"/api/v1/recipes\", recipe, config);\r\n            dispatch({\r\n                type: \"ADD_RECIPE\",\r\n                payload: res.data.data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Delete ingredient from specific recipe\r\n    async function deleteRecipeIngredient(recipeId, ingredient) {\r\n        try {\r\n            await axios.delete(`/api/v1/recipes/${recipeId}/${ingredient._id}`);\r\n            dispatch({\r\n                type: \"DELETE_RECIPE_INGREDIENT\",\r\n                payload: [recipeId, ingredient],\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Append ingredient to end of specific recipe\r\n    async function addRecipeIngredient(recipeId, ingredient) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await axios.post(`/api/v1/recipes/${recipeId}`, ingredient, config);\r\n            dispatch({\r\n                type: \"ADD_RECIPE_INGREDIENT\",\r\n                payload: [recipeId, res.data.data.ingredient],\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Mark recipe to be added to shopping list\r\n    function addRecipeToShoppingList(recipeId) {\r\n        try {\r\n            dispatch({\r\n                type: \"SET_RECIPE_FOR_SHOPPING_LIST\",\r\n                payload: recipeId,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Add all selected recipes ingredients to shopping list\r\n    async function saveAddedRecipes() {\r\n        //dispatch to update state then post new ShoppingList pulled from updated state\r\n        try {\r\n            dispatch({\r\n                type: \"SAVE_RECIPES_ADDED_TO_SHOPPING_LIST\",\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        await axios.post(\"/api/v1/shoppingList\", state.shoppingList, config);\r\n    }\r\n\r\n    // Save edited recipe\r\n    async function saveEditedRecipe(recipe) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        await axios.post(\"/api/v1/recipes/edit\", recipe, config);\r\n        try {\r\n            dispatch({\r\n                type: \"SAVE_EDITED_RECIPE\",\r\n                payload: recipe,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////\r\n    // SHOPPINGLIST\r\n    // Get current shopping list and add to state\r\n    async function getShoppingList() {\r\n        const res = await axios.get(\"/api/v1/shoppingList\");\r\n        try {\r\n            dispatch({\r\n                type: \"GET_SHOPPING_LIST\",\r\n                payload: res.data.data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // This setting controls visibility of select recipe buttons\r\n    function setCreateShoppingListBool(cancelOrClose) {\r\n        try {\r\n            dispatch({\r\n                type: \"SET_CREATE_SHOPPING_LIST_BOOL\",\r\n                payload: cancelOrClose,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Manually add ingredient to shopping list grocer section\r\n    async function addIngredientToShoppingListSection(sectionName, ingredient) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        let _id = state.shoppingList._id;\r\n        const res = await axios.post(\"/api/v1/shoppingList/update\", { _id, sectionName, ingredient }, config);\r\n        const ingredientObj = res.data.data.ingredient;\r\n        try {\r\n            dispatch({\r\n                type: \"ADD_INGREDIENT_TO_SHOPPING_LIST_SECTION\",\r\n                payload: [sectionName, ingredientObj],\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Non async function, force wait before rerendering shopping list\r\n    function clearShoppingList() {\r\n        let empty = true;\r\n        Object.keys(state.shoppingList.grocerySectionIngredientsMap).forEach((key) => {\r\n            if (state.shoppingList.grocerySectionIngredientsMap[key].length > 0) {\r\n                empty = false;\r\n            }\r\n        });\r\n        if (empty) return;\r\n\r\n        let _id = state.shoppingList._id;\r\n        axios.delete(`/api/v1/shoppingList/${_id}`);\r\n        try {\r\n            dispatch({\r\n                type: \"CLEAR_SHOPPING_LIST\",\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"RECIPE_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////\r\n    // GROCERYSECTIONS\r\n    // Get list of all current sections and add to state\r\n    async function getGrocerySections() {\r\n        try {\r\n            const res = await axios.get(\"/api/v1/settings/grocerySections\");\r\n            dispatch({\r\n                type: \"GET_GROCERY_SECTIONS\",\r\n                payload: res.data.data[0],\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"SETTINGS_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Add new grocery section\r\n    async function addGrocerySection(_id, sectionName) {\r\n        try {\r\n            await axios.post(`/api/v1/settings/grocerySections/${_id}/${sectionName}`);\r\n            dispatch({\r\n                type: \"ADD_GROCERY_SECTION\",\r\n                payload: sectionName,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"SETTINGS_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Delete grocery section\r\n    async function deleteGrocerySection(_id, sectionName, defaultSection) {\r\n        try {\r\n            dispatch({\r\n                type: \"DELETE_GROCERY_SECTION\",\r\n                payload: sectionName,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"SETTINGS_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        await axios.post(`/api/v1/settings/grocerySections/${_id}/${sectionName}/${defaultSection}`, state.shoppingList, config);\r\n    }\r\n\r\n    // Set the default section\r\n    async function setDefaultGrocerySection(_id, sectionName) {\r\n        try {\r\n            await axios.post(`/api/v1/settings/grocerySections/default/${_id}/${sectionName}`);\r\n            dispatch({\r\n                type: \"SET_GROCERY_SECTION_DEFAULT\",\r\n                payload: sectionName,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"SETTINGS_ERROR\",\r\n                payload: error,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                recipes: state.recipes,\r\n                shoppingList: state.shoppingList,\r\n                creatingShoppingList: state.creatingShoppingList,\r\n                grocerySections: state.grocerySections,\r\n                error: state.error,\r\n                onStartUp,\r\n                getRecipes,\r\n                deleteRecipe,\r\n                addRecipe,\r\n                deleteRecipeIngredient,\r\n                addRecipeIngredient,\r\n                getShoppingList,\r\n                setCreateShoppingListBool,\r\n                addRecipeToShoppingList,\r\n                saveAddedRecipes,\r\n                addIngredientToShoppingListSection,\r\n                clearShoppingList,\r\n                getGrocerySections,\r\n                addGrocerySection,\r\n                deleteGrocerySection,\r\n                setDefaultGrocerySection,\r\n                saveEditedRecipe,\r\n            }}\r\n        >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n","export default class DefaultDict {\r\n    constructor(defaultInit) {\r\n        return new Proxy(\r\n            {},\r\n            {\r\n                get: (target, name) =>\r\n                    name in target ? target[name] : (target[name] = typeof defaultInit === \"function\" ? new defaultInit().valueOf() : defaultInit),\r\n            }\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst H1 = styled.h1`\r\n    margin-top: 15px;\r\n    text-align: center;\r\n`;\r\n/*\r\n    SUMMARY:\r\n        Header for site\r\n\r\n    PARAMS: \r\n    \r\n*/\r\n\r\nexport const Header = () => {\r\n    return <H1>INDIVIDUA&#8729;LIST</H1>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport DropdownButtonImported from \"react-bootstrap/DropdownButton\";\r\nimport DropdownImported from \"react-bootstrap/Dropdown\";\r\n\r\n/*\r\n    SUMMARY:\r\n        Drop down button for grocery sections    \r\n\r\n    PARAMS: \r\n        defaultSection: default grocery store section\r\n        handleChange: pased in from new ingredient form, will update drop down title\r\n        sections: grocery sections for drop down\r\n        setRecipeObjFunc: update recipeObj\r\n        recipeObj: {active: true/false, recipe: {recipe object}, editRecipe: {copy of recipe object used for editing}}\r\n        index: ingredient index\r\n*/\r\n\r\nexport const DropDownButton = ({ defaultSection, handleChange, sections, recipeObj, setRecipeObjFunc, index }) => {\r\n    // Context\r\n    const [grocerySection, setGrocerySection] = useState(defaultSection);\r\n\r\n    // Functions\r\n    // Update new ingredient form if needed.\r\n    // If edditing update the ingredients grocery section in state\r\n    const handleChangeLocal = (text) => {\r\n        // Handle change only passed in from the new ingredient form\r\n        // Used to update the parrent states value\r\n        if (handleChange) {\r\n            setGrocerySection(text);\r\n            handleChange(text);\r\n        } else {\r\n            if (recipeObj.active) setGrocerySection(text);\r\n            setRecipeObjFunc({\r\n                ...recipeObj,\r\n                editRecipe: {\r\n                    ...recipeObj.editRecipe,\r\n                    ingredients: [\r\n                        ...recipeObj.editRecipe.ingredients.slice(0, index),\r\n                        { ...recipeObj.editRecipe.ingredients[index], grocerySection: text },\r\n                        ...recipeObj.editRecipe.ingredients.slice(index + 1),\r\n                    ],\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DropdownButtonImported className=\"dropdown-button-drop-right\" drop=\"right\" size=\"sm\" variant=\"info\" title={grocerySection}>\r\n            {sections.map((section, index) => (\r\n                <DropdownImported.Item key={index} onClick={(e) => handleChangeLocal(e.target.text)} eventKey={index + 1}>\r\n                    {section}\r\n                </DropdownImported.Item>\r\n            ))}\r\n        </DropdownButtonImported>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h1`\r\n    letter-spacing: 1px;\r\n    margin: 0;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h3`\r\n    border-bottom: 1px solid #bbb;\r\n    padding-bottom: 10px;\r\n    margin: 40px 0 10px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h4`\r\n    margin: 0;\r\n    text-transform: uppercase;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.input`\r\n    border: 1px solid #dedede;\r\n    border-radius: 2px;\r\n    display: ${(props) => (props.isRecipeWebsite ? \"\" : \"block\")};\r\n    font-size: 16px;\r\n    padding: ${(props) =>\r\n        props.isShoppingListIngredient || props.isRecipeServings ? \"5px 0px 5px 5px\" : props.isRecipeWebsite ? \"2.5px\" : \"10px 0px 10px 10px\"};\r\n    width: ${(props) => (props.isRecipeServings ? \"45px\" : props.isRecipeWebsite ? \"50%\" : \"100%\")};\r\n    /* margin-right: ${(props) => (\r\n        props.isGrocerySection || props.isShoppingListIngredient, props.isRecipeIngredient || props.isGrocerySection ? \"10px\" : \"0px\"\r\n    )}; */\r\n    margin-right: 10px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.label`\r\n    display: inline-block;\r\n    margin: ${(props) => (props.isRecipeServings ? \"10px 5px\" : \"10px 0px\")};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n    cursor: pointer;\r\n    background-color: #9c88ff;\r\n    box-shadow: var(--box-shadow);\r\n    color: #fff;\r\n    border: 0;\r\n    display: block;\r\n    font-size: ${(props) => (props.isShoppingListOption ? \"12px\" : \"16px\")};\r\n    margin: ${(props) => (props.ingredient ? \"10px 0 0px\" : props.isShoppingListOption ? \"2.5px\" : \"10px 0 30px\")};\r\n    padding: ${(props) => (props.isShoppingListOption ? \"2.5px 5px 2.5px 5px\" : \"10px\")};\r\n    width: ${(props) => (props.isShoppingListOption ? \"\" : \"100%\")};\r\n    float: ${(props) => (props.isShoppingListOption ? \"right\" : \"\")};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.span`\r\n    cursor: pointer;\r\n    color: #fff;\r\n    border: 0;\r\n    display: block;\r\n    font-size: 16px;\r\n    background-color: ${(props) => (props.isShoppingList ? \"white\" : \"#f7f7f7\")};\r\n    width: 100%;\r\n    line-height: ${(props) => (props.isShoppingList ? \"1.25\" : \"3\")};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { AccordionButton } from \"./index\";\r\n\r\nexport default styled.li`\r\n    background-color: ${(props) => (props.active ? \"#ccc\" : \"#f7f7f7\")};\r\n    box-shadow: ${(props) =>\r\n        props.isShoppingList || props.isGrocerySection || props.isIngredient\r\n            ? \"0 1px 3px rgba(0, 0, 0, .5), 0 1px 2px rgba(0, 0, 0, .5)\"\r\n            : \"var(--box-shadow)\"};\r\n    color: #333;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    padding: ${(props) => (props.isShoppingList ? \"2.5px 5px 2.5px 5px\" : props.isRecipe ? \"0\" : props.isShoppingListIngredient ? \"0px\" : \"10px\")};\r\n    margin: ${(props) =>\r\n        props.isShoppingList || props.isGrocerySection || (props.isIngredient && !props.isForm)\r\n            ? \"\"\r\n            : props.isShoppingListIngredient\r\n            ? \"5px 0px\"\r\n            : props.isRecipe\r\n            ? \"5px 0px\"\r\n            : \"10px 0px\"};\r\n    width: ${(props) => (props.isIngredient ? \"90%\" : \"\")};\r\n    float: ${(props) => (props.isIngredient ? \"right\" : \"\")};\r\n    border-right: ${(props) =>\r\n        props.isRecipe || props.isGrocerySectionHeader ? (props.ingredientCount > 0 ? \"5px solid #2ecc71\" : \"5px solid #c0392b;\") : \"\"};\r\n    list-style-type: ${(props) => (props.isRecipe ? \"none\" : \"\")};\r\n\r\n    ${AccordionButton}:hover & {\r\n        background-color: #ccc;\r\n    }\r\n    line-height: ${(props) => (props.isRecipe ? \"1.25\" : \"\")};\r\n    min-height: ${(props) => (props.isRecipe ? \"50px\" : \"\")};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    margin-bottom: ${(props) => (props.isRecipe ? \"10px\" : \"0px\")};\r\n    position: relative;\r\n    ${(props) =>\r\n        props.isGrocerySection &&\r\n        `\r\n        display: block;\r\n        float: right;\r\n    `}\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nexport default styled.button`\r\n    cursor: pointer;\r\n    background-color: #e74c3c;\r\n    border: 0;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    line-height: 20px;\r\n    padding: 2px 5px;\r\n    opacity: 0;\r\n    transition: opacity 0.3s ease;\r\n    ${Wrapper}:hover & {\r\n        opacity: 1;\r\n    }\r\n\r\n    position: absolute;\r\n\r\n    top: 0px;\r\n    right: 0px;\r\n    transform: ${(props) => (props.isIngredient || props.isGrocerySection ? \"translate(100%, 50%)\" : \"translate(100%, 170%)\")};\r\n`;\r\n/* \r\n    position: ${(props) => (props.isIngredient ? \"absolute\" : \"relative\")};  else recpe *\r\n    transform: ${(props) => (props.isIngredient ? \"translate(-170%, -0%)\" : \"translate(-100%, -170%)\")}; else recpe\r\n    */\r\n","import React from \"react\";\r\nconst Link = ({ className, text, ...props }) => (\r\n    <a {...props} className={className}>\r\n        {text}\r\n    </a>\r\n);\r\n\r\nexport default Link;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n    opacity: ${(props) => (props.available === true ? 1 : 0)};\r\n    transition: opacity 0.3s ease;\r\n    border: none;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    transform: translate(-100%, 175%);\r\n    background: none;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n    overflow: ${(props) => (props.maxHeight === \"0px\" ? \"hidden\" : \"\")};\r\n    height: ${(props) => props.maxHeight};\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { DropDownButton } from \"../util/DropDownButton\";\r\nimport { DeleteButton, List, Wrapper, Input } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Div = styled.div`\r\n    margin-left: 10px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Diplay/edit/delete recipe ingredient \r\n\r\n    PARAMS: \r\n        recipeId: recipe._id\r\n        ingredient: specific recipe from recipe\r\n        index: index of the ingredient in recipe ingredient list\r\n        handleDeleteIngredient: function to update accordion content height of ingredients\r\n        setRecipeObjFunc: update recipeObj\r\n        recipeObj: {active: true/false, recipe: {recipe object}, editRecipe: {copy of recipe object used for editing}}\r\n\r\n*/\r\nexport const Ingredient = ({ recipeId, ingredient, index, handleDeleteIngredient, recipeObj, setRecipeObjFunc }) => {\r\n    // Context\r\n    const { deleteRecipeIngredient, grocerySections } = useContext(GlobalContext);\r\n\r\n    // Functions\r\n    // Delete ingredient from recipe and update accordion content max-height\r\n    const handleOnClick = () => {\r\n        deleteRecipeIngredient(recipeId, ingredient);\r\n        handleDeleteIngredient();\r\n    };\r\n\r\n    // While editing is active update editRecipe obj ingredient name for index\r\n    const handleInputChange = (e) => {\r\n        setRecipeObjFunc({\r\n            ...recipeObj,\r\n            editRecipe: {\r\n                ...recipeObj.editRecipe,\r\n                ingredients: [\r\n                    ...recipeObj.editRecipe.ingredients.slice(0, index),\r\n                    { ...recipeObj.editRecipe.ingredients[index], name: e.target.value },\r\n                    ...recipeObj.editRecipe.ingredients.slice(index + 1),\r\n                ],\r\n            },\r\n        });\r\n    };\r\n\r\n    // Recipe ingredient\r\n    // If in eding mode display editRecipe values\r\n    return (\r\n        <Wrapper>\r\n            <List isIngredient>\r\n                {recipeObj.active ? null : (\r\n                    <DeleteButton isIngredient onClick={handleOnClick}>\r\n                        x\r\n                    </DeleteButton>\r\n                )}\r\n                {recipeObj.active ? (\r\n                    <Input\r\n                        isRecipeIngredient\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Ingredient...\"\r\n                        value={recipeObj.editRecipe.ingredients[index].name || \"\"}\r\n                        onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                ) : (\r\n                    `${index + 1}: ${ingredient.name}`\r\n                )}\r\n                <Div>\r\n                    <DropDownButton\r\n                        defaultSection={ingredient.grocerySection}\r\n                        sections={grocerySections.sections}\r\n                        recipeObj={recipeObj}\r\n                        setRecipeObjFunc={setRecipeObjFunc}\r\n                        index={index}\r\n                    />\r\n                </Div>\r\n            </List>\r\n        </Wrapper>\r\n    );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { Ingredient } from \"./Ingredient\";\r\nimport { DropDownButton } from \"../util/DropDownButton\";\r\nimport { List, Input, Button, Wrapper } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    width: 100%;\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n`;\r\nconst TableBody = styled.tbody``;\r\nconst TR = styled.tr``;\r\nconst TD = styled.td`\r\n    width: 100%;\r\n    padding-left: ${(props) => (props.isRight ? \"10px\" : \"5px\")};\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Display new ingredient form and map ingredients to ingredient component\r\n\r\n    PARAMS: \r\n        handleDeleteIngredient: function to update accordion content height of ingredients\r\n        handleAddIngredient: function to update accordion content height of ingredients\r\n        recipeId: recipe._id\r\n        setRecipeObjFunc: update recipeObj\r\n        recipeObj: {active: true/false, recipe: {recipe object}, editRecipe: {copy of recipe object used for editing}}\r\n\r\n*/\r\nexport const Ingredients = ({ handleDeleteIngredient, handleAddIngredient, recipeObj, setRecipeObjFunc }) => {\r\n    // Context\r\n    const { addRecipeIngredient, grocerySections } = useContext(GlobalContext);\r\n\r\n    // State\r\n    const [newIngredientGrocerySection, setNewIngredientGrocerySection] = useState(grocerySections.default);\r\n    const [newIngredient, setNewIngredient] = useState(\"\");\r\n\r\n    // functions\r\n    // On submit new inrgedient add to state reset field and use handleAddIngredient to increase accorion content size\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let newIgredient = {\r\n            name: newIngredient,\r\n            grocerySection: newIngredientGrocerySection,\r\n        };\r\n        addRecipeIngredient(recipeObj.recipe._id, newIgredient);\r\n        setNewIngredient(\"\");\r\n        handleAddIngredient();\r\n    };\r\n\r\n    // Map list of ingredients and display new ingredient form at end of list\r\n    // If in eding mode display editRecipe values\r\n    return (\r\n        <ul>\r\n            {recipeObj.recipe.ingredients.map((ingredient, index) => {\r\n                return (\r\n                    <Ingredient\r\n                        key={index}\r\n                        recipeId={recipeObj.recipe._id}\r\n                        ingredient={ingredient}\r\n                        index={index}\r\n                        handleDeleteIngredient={handleDeleteIngredient}\r\n                        recipeObj={recipeObj}\r\n                        setRecipeObjFunc={setRecipeObjFunc}\r\n                    />\r\n                );\r\n            })}\r\n            {recipeObj.active ? null : (\r\n                <List isIngredient isForm>\r\n                    <Form onSubmit={onSubmit}>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Input\r\n                                            isIngredient\r\n                                            value={newIngredient}\r\n                                            onChange={(e) => setNewIngredient(e.target.value)}\r\n                                            placeholder=\"Enter Ingredient...\"\r\n                                            required=\"required\"\r\n                                        />\r\n                                    </TD>\r\n                                    <TD isRight>\r\n                                        <Wrapper isGrocerySection>\r\n                                            <DropDownButton\r\n                                                defaultSection={grocerySections.default}\r\n                                                handleChange={setNewIngredientGrocerySection}\r\n                                                sections={grocerySections.sections}\r\n                                                recipeObj={recipeObj}\r\n                                                setRecipeObjFunc={setRecipeObjFunc}\r\n                                            />\r\n                                        </Wrapper>\r\n                                    </TD>\r\n                                </TR>\r\n                                <TR>\r\n                                    <TD colSpan={2}>\r\n                                        <Button type=\"submit\" ingredient>\r\n                                            Save\r\n                                        </Button>\r\n                                    </TD>\r\n                                </TR>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Form>\r\n                </List>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst AccordionIcon = styled.svg`\r\n    transition: transform 0.3s;\r\n    width: 10px;\r\n    fill: #777;\r\n    ${(props) =>\r\n        props.rotate === \"rotate\" &&\r\n        `\r\n        transform: rotate(90deg);\r\n        `};\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Cheveron   \r\n\r\n    PARAMS: \r\n        rotate: rotate or dont rotate svg \r\n\r\n*/\r\nexport const CheveronSvg = ({ rotate }) => {\r\n    return (\r\n        <AccordionIcon rotate={rotate} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n            <path d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"></path>\r\n        </AccordionIcon>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { CheckMarkButton } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst CheckMarkStyle = styled.svg`\r\n    width: 24px;\r\n    height: 24px;\r\n    fill: ${(props) => (props.active === true ? \"green\" : \"black\")};\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Display clickable check mark next to recipe. \r\n        On click set the addToShoppingList bool on recipe\r\n\r\n    PARAMS: \r\n        active: is recipe selected\r\n        recipe_id: recipe._id\r\n\r\n*/\r\n\r\nexport const SelectRecipeButton = ({ active, recipe_id }) => {\r\n    // State\r\n    const { creatingShoppingList, addRecipeToShoppingList } = useContext(GlobalContext);\r\n\r\n    //\r\n    return (\r\n        <CheckMarkButton available={creatingShoppingList} onClick={() => addRecipeToShoppingList(recipe_id)}>\r\n            <CheckMarkStyle xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" active={active}>\r\n                <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\"></path>\r\n            </CheckMarkStyle>\r\n        </CheckMarkButton>\r\n    );\r\n};\r\n","import React, { useContext, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { Ingredients } from \"./Ingredients\";\r\nimport { CheveronSvg } from \"../SVG/CheveronSvg\";\r\nimport { SelectRecipeButton } from \"./SelectRecipeButton\";\r\nimport { List, AccordionButton, Wrapper, DeleteButton, Link, AccordionContent, Input, Label } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Ul = styled.ul`\r\n    width: 100%;\r\n    list-style: none;\r\n`;\r\n\r\nconst Li = styled.li`\r\n    float: left;\r\n    width: ${(props) => (props.large ? \"45%\" : \"27.5%\")};\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px 0px 5px 0px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: blue;\r\n    font-size: 75%;\r\n`;\r\n\r\nconst Span = styled.span`\r\n    color: blue;\r\n    font-size: 75%;\r\n    float: right;\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n    margin-left: ${(props) => (props.isSave ? \"10px\" : \"\")};\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Display non ingredient recipe attributes.  Allow delete recipe  \r\n        Create accordion content containing ingredients.\r\n        Create the recipe obj which will be used to display edit and replace recipe on save.\r\n\r\n    PARAMS: \r\n        recipe: recipe to display \r\n\r\n*/\r\nexport const Recipe = ({ recipe }) => {\r\n    // Context\r\n    const { deleteRecipe, saveEditedRecipe } = useContext(GlobalContext);\r\n\r\n    // State\r\n    const [setActive, setActiveState] = useState(false);\r\n    const [setHeight, setHeightState] = useState(\"0px\");\r\n    const [setRotate, setRotateState] = useState(\"\");\r\n    const [recipeObj, setRecipeObj] = useState({ active: false, recipe: recipe, editRecipe: {} });\r\n\r\n    // Window\r\n    const content = useRef(null);\r\n\r\n    // Functions\r\n    // display or dont display ingredients.  rotate the cheveron svg\r\n    const toggleAccordion = () => {\r\n        setActiveState(!setActive);\r\n        setHeightState(setActive ? \"0px\" : `${content.current.scrollHeight}px`);\r\n        setRotateState(setActive ? \"\" : \"rotate\");\r\n    };\r\n\r\n    // Decrease accodion content height\r\n    const handleDeleteIngredient = () => {\r\n        setHeightState(`${content.current.scrollHeight - 50.833333}px`);\r\n    };\r\n\r\n    // Increase accodion content height\r\n    const handleAddIngredient = () => {\r\n        setHeightState(`${content.current.scrollHeight + 50.833333}px`);\r\n    };\r\n\r\n    // Edit: clone recipe to use for edint and togle accordion open\r\n    // Save: replace recipe with editRecipe\r\n    // Cancle: delete edit recipe\r\n    const handleEditingClicks = (type) => {\r\n        // On eddit set active to true and clone recipe object to edit\r\n        if (type === \"edit\") {\r\n            setRecipeObj({ ...recipeObj, active: true, editRecipe: recipeObj.recipe });\r\n            if (!setActive) toggleAccordion();\r\n\r\n            // On save set active to false and replace recipe with cloned/edited version\r\n        } else if (type === \"save\") {\r\n            saveEditedRecipe(recipeObj.editRecipe);\r\n            setRecipeObj({ ...recipeObj, active: false, recipe: recipeObj.editRecipe, editRecipe: {} });\r\n            //On cancle set active to false and deleted clone\r\n        } else if (type === \"cancle\") {\r\n            setRecipeObj({ ...recipeObj, active: false, editRecipe: {} });\r\n        }\r\n    };\r\n\r\n    // Display recipe options and links above recipe\r\n    // display recipe attributes in button\r\n    // accordion content: ingredients\r\n    // If in eding mode display editRecipe values\r\n    return (\r\n        <>\r\n            <Wrapper isRecipe>\r\n                {!recipeObj.active ? (\r\n                    <>\r\n                        <SelectRecipeButton active={recipeObj.recipe.addToShoppingList} recipe_id={recipeObj.recipe._id} />\r\n                        <DeleteButton isRecipe onClick={() => deleteRecipe(recipeObj.recipe._id)}>\r\n                            x\r\n                        </DeleteButton>\r\n                        <StyledLink text=\"Website\" href={recipeObj.recipe.URL} />\r\n                        <Span onClick={() => handleEditingClicks(\"edit\")}>Edit</Span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Input\r\n                            isRecipeWebsite\r\n                            type=\"text\"\r\n                            placeholder=\"Enter URL...\"\r\n                            value={recipeObj.editRecipe.URL || \"\"}\r\n                            onChange={(e) => setRecipeObj({ ...recipeObj, editRecipe: { ...recipeObj.editRecipe, URL: e.target.value } })}\r\n                        />\r\n                        <Span isSave onClick={() => handleEditingClicks(\"save\")}>\r\n                            Save\r\n                        </Span>\r\n                        <Span isEdit onClick={() => handleEditingClicks(\"cancle\")}>\r\n                            Cancle\r\n                        </Span>\r\n                    </>\r\n                )}\r\n\r\n                <AccordionButton active={setActive} onClick={() => (!recipeObj.active ? toggleAccordion() : null)}>\r\n                    <List active={setActive || recipeObj.active} ingredientCount={recipeObj.recipe.ingredients.length} isRecipe>\r\n                        <Ul>\r\n                            {!recipeObj.active ? (\r\n                                <>\r\n                                    <Li large key=\"name\">\r\n                                        {recipeObj.recipe.name}\r\n                                    </Li>\r\n                                    <Li med key=\"servings\">\r\n                                        Servings: {recipeObj.recipe.servings}\r\n                                    </Li>\r\n                                    <Li med key=\"ingredientCount\">\r\n                                        Ingredients: {recipeObj.recipe.ingredients.length} &nbsp;&nbsp;\r\n                                        <CheveronSvg rotate={setRotate} />\r\n                                    </Li>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Li large key=\"name\">\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Name...\"\r\n                                            value={recipeObj.editRecipe.name || \"\"}\r\n                                            onChange={(e) => setRecipeObj({ ...recipeObj, editRecipe: { ...recipeObj.editRecipe, name: e.target.value } })}\r\n                                        />\r\n                                    </Li>\r\n                                    <Li med key=\"servings\">\r\n                                        <Label isRecipeServings>Servings</Label>\r\n                                        <Input\r\n                                            isRecipeServings\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            max=\"99\"\r\n                                            value={recipeObj.editRecipe.servings || 1}\r\n                                            onChange={(e) => setRecipeObj({ ...recipeObj, editRecipe: { ...recipeObj.editRecipe, servings: e.target.value } })}\r\n                                            placeholder=\"Enter Servings...\"\r\n                                        />\r\n                                    </Li>\r\n                                    <Li med key=\"ingredientCount\">\r\n                                        Ingredients: {recipeObj.recipe.ingredients.length} &nbsp;&nbsp;\r\n                                        <CheveronSvg rotate={setRotate} />\r\n                                    </Li>\r\n                                </>\r\n                            )}\r\n                        </Ul>\r\n                    </List>\r\n                </AccordionButton>\r\n            </Wrapper>\r\n            {/* Accordion Content contains list of ingredients */}\r\n            <AccordionContent ref={content} maxHeight={setHeight}>\r\n                <Ingredients\r\n                    handleDeleteIngredient={handleDeleteIngredient}\r\n                    handleAddIngredient={handleAddIngredient}\r\n                    recipeObj={recipeObj}\r\n                    setRecipeObjFunc={setRecipeObj}\r\n                />\r\n            </AccordionContent>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Component\r\nconst SettingsIcon = styled.svg`\r\n    width: 50px;\r\n    height: 50px;\r\n    fill: #581845;\r\n    float: right;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Settings svg for home page   \r\n\r\n    PARAMS: \r\n        rotate: rotate or dont rotate svg \r\n\r\n*/\r\n\r\nexport const SettingsSvg = () => {\r\n    return (\r\n        <SettingsIcon viewBox=\"0 0 500 500\">\r\n            {/* // Generator: Adobe Illustrator 18.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  */}\r\n            <path\r\n                d=\"M286.244,249.537l10.992-45.639c0.035-0.143,0.071-0.285,0.109-0.428c2.909-10.867,11.469-19.426,22.339-22.338\r\n\t\tl33.347-8.936c-5.472-6.525-13.678-10.682-22.839-10.682h-9.837c-2.511-7.895-5.7-15.59-9.515-22.957l6.96-6.959\r\n\t\tc11.622-11.623,11.622-30.535,0-42.156L296.76,68.4c-5.631-5.629-13.117-8.73-21.079-8.73c-7.961,0-15.447,3.102-21.078,8.732\r\n\t\tl-6.96,6.959c-7.369-3.814-15.064-7.004-22.956-9.516V56.01c0-16.436-13.372-29.807-29.808-29.807h-29.758\r\n\t\tc-16.436,0-29.808,13.371-29.808,29.807v9.836c-7.893,2.512-15.588,5.701-22.957,9.516l-6.96-6.961\r\n\t\tc-5.631-5.629-13.117-8.73-21.078-8.73c-7.961,0-15.447,3.102-21.079,8.732L42.2,89.443c-11.622,11.621-11.622,30.533,0,42.156\r\n\t\tl6.959,6.959c-3.815,7.367-7.004,15.063-9.515,22.957h-9.837C13.372,161.516,0,174.887,0,191.324v29.758\r\n\t\tc0,16.436,13.372,29.807,29.808,29.807h9.837c2.511,7.895,5.7,15.588,9.515,22.957l-6.96,6.959\r\n\t\tc-11.623,11.623-11.623,30.533,0,42.158l21.041,21.039c5.632,5.631,13.118,8.732,21.079,8.732s15.447-3.102,21.077-8.732\r\n\t\tl6.96-6.959c7.366,3.815,15.061,7.002,22.957,9.514v9.838c0,16.436,13.372,29.809,29.808,29.809h25.809\r\n\t\tc-2.388-5.691-3.644-11.852-3.645-18.209c-0.002-12.572,4.892-24.391,13.781-33.279L286.244,249.537z M180,286.201\r\n\t\tc-44.112,0-80-35.887-80-79.998c0-44.113,35.888-80.002,80-80.002s80,35.889,80,80.002C260,250.314,224.112,286.201,180,286.201z\"\r\n            />\r\n            <path\r\n                d=\"M425.267,218.734l-0.319-0.32c-0.939-0.941-2.189-1.428-3.541-1.469c-1.326,0-2.598,0.525-3.536,1.465l-21.596,21.596\r\n\t\tc-3.304,3.305-7.699,5.125-12.375,5.125c-4.676,0-9.072-1.82-12.379-5.129c-3.307-3.305-5.128-7.701-5.128-12.377\r\n\t\tc0.001-4.676,1.821-9.072,5.126-12.377l21.596-21.596c0.939-0.939,1.465-2.213,1.464-3.539c-0.001-1.328-0.53-2.6-1.47-3.537\r\n\t\tl-0.314-0.313c-3.605-3.605-8.399-5.592-13.499-5.592c-1.665,0-3.325,0.219-4.936,0.65l-44.348,11.885\r\n\t\tc-6.568,1.76-11.741,6.932-13.498,13.496c-0.011,0.041-0.021,0.08-0.031,0.121l-11.817,49.063l-87.667,87.666\r\n\t\tc-6.528,6.527-10.122,15.207-10.121,24.44c0.002,9.232,3.598,17.91,10.126,24.439l2.088,2.088\r\n\t\tc6.528,6.529,15.209,10.125,24.443,10.125h0c9.231,0,17.909-3.594,24.437-10.121l87.667-87.666l49.061-11.816\r\n\t\tc0.041-0.01,0.082-0.022,0.122-0.031c6.563-1.758,11.735-6.928,13.497-13.496l11.883-44.352\r\n\t\tC431.959,230.598,430.066,223.535,425.267,218.734z M257.26,368.406c-1.888,1.889-4.399,2.93-7.071,2.93\r\n\t\tc-2.671,0-5.183-1.041-7.072-2.932c-1.887-1.885-2.928-4.397-2.928-7.068c-0.001-2.672,1.041-5.185,2.931-7.072\r\n\t\tc1.886-1.887,4.398-2.928,7.069-2.928c2.672,0,5.184,1.041,7.072,2.93c1.887,1.885,2.928,4.396,2.928,7.068\r\n\t\tC260.189,364.006,259.148,366.518,257.26,368.406z M316.194,305.935L274.82,347.31c-1.416,1.416-3.3,2.197-5.303,2.197\r\n\t\tc-2.003,0-3.887-0.781-5.303-2.197c-1.417-1.416-2.197-3.299-2.197-5.303s0.78-3.887,2.197-5.303l41.374-41.375\r\n\t\tc1.417-1.418,3.3-2.197,5.303-2.197s3.887,0.779,5.303,2.197c1.417,1.416,2.197,3.299,2.197,5.303S317.611,304.519,316.194,305.935\r\n\t\tz\"\r\n            />\r\n        </SettingsIcon>\r\n    );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { Recipe } from \"./Recipe\";\r\nimport { SettingsSvg } from \"../SVG/SettingSvg\";\r\nimport styled from \"styled-components\";\r\nimport { H3 } from \"../../elements/index\";\r\n\r\n// Styled Components\r\nconst Ul = styled.ul`\r\n    padding-left: 3%;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Get recipes from DB and map them to recipe components.\r\n        Link to settings page\r\n\r\n    PARAMS: \r\n\r\n*/\r\nexport const RecipeList = () => {\r\n    // State\r\n    const { recipes, onStartUp } = useContext(GlobalContext);\r\n\r\n    // Functions\r\n    // If reder check if we need to get recipes.\r\n    //      if visiting the settings page and returning no update needed\r\n    useEffect(() => {\r\n        if (Object.entries(recipes).length === 0) {\r\n            onStartUp();\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Link to=\"/settings\">\r\n                <SettingsSvg />\r\n            </Link>\r\n\r\n            <H3>Recipes</H3>\r\n            <Ul>\r\n                {Object.entries(recipes).map(([_id, recipe]) => (\r\n                    <Recipe key={_id} recipe={recipe} />\r\n                ))}\r\n            </Ul>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { H3, Input, Label, Button } from \"../../elements/index\";\r\n\r\n/*\r\n    SUMMARY:\r\n        Add new recipe (name, url, servings)\r\n\r\n    PARAMS: \r\n\r\n*/\r\nexport const AddRecipe = () => {\r\n    // Context\r\n    const { addRecipe } = useContext(GlobalContext);\r\n    const { recipes } = useContext(GlobalContext);\r\n\r\n    // State\r\n    const [name, setRecipeName] = useState(\"\");\r\n    const [servings, setServings] = useState(1);\r\n    const [URL, setRecipeURL] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    // Functions\r\n    // On submit check for validation errors, post recipe, reset state\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        const errors = [];\r\n        Object.entries(recipes).forEach(([_id, recipe]) => {\r\n            if (recipe.name === name) {\r\n                errors.push(\"Recipe name must be unique\");\r\n                return;\r\n            }\r\n        });\r\n        if (errors.length > 0) {\r\n            setErrors(errors);\r\n            return;\r\n        }\r\n        let url = URL;\r\n        if (!/^https?:\\/\\//i.test(url)) {\r\n            url = \"http://\" + url;\r\n        }\r\n        console.log(url);\r\n        const newRecipe = {\r\n            name,\r\n            servings,\r\n            URL: url,\r\n            ingredients: [],\r\n        };\r\n        addRecipe(newRecipe);\r\n        setRecipeName(\"\");\r\n        setServings(1);\r\n        setRecipeURL(\"\");\r\n    };\r\n\r\n    // New recipe form (no ingredients added at start)\r\n    return (\r\n        <>\r\n            <H3>Add new Recipe</H3>\r\n            <form onSubmit={onSubmit}>\r\n                {errors.map((error) => (\r\n                    <p className=\"error\" key={error}>\r\n                        {error}\r\n                    </p>\r\n                ))}\r\n                <div>\r\n                    <Label>Name</Label>\r\n                    <Input type=\"text\" value={name} onChange={(e) => setRecipeName(e.target.value)} placeholder=\"Enter Name...\" required=\"required\" />\r\n                </div>\r\n                <div>\r\n                    <Label>Servings</Label>\r\n                    <Input type=\"number\" min=\"1\" max=\"99\" value={servings} onChange={(e) => setServings(e.target.value)} placeholder=\"Enter Servings...\" />\r\n                </div>\r\n                <div>\r\n                    <Label>URL</Label>\r\n                    <Input type=\"text\" value={URL} onChange={(e) => setRecipeURL(e.target.value)} placeholder=\"Enter URL...\" />\r\n                </div>\r\n                <Button isAddRecipeButton>Add Recipe</Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    background-color: ${(props) => (props.clicked === true ? \"#8171d1\" : \"#9c88ff\")};\r\n    box-shadow: var(--box-shadow);\r\n    color: #fff;\r\n    border: 0;\r\n    font-size: 14px;\r\n    padding: 5px;\r\n    margin: ${(props) => (props.top ? \"10px 5px 5px 5px\" : \"5px 5px 0px 5px\")};\r\n    width: 90%;\r\n    &:hover {\r\n        background-color: #8171d1;\r\n    }\r\n`;\r\n\r\nconst Div = styled.div`\r\n    position: fixed;\r\n    left: 0px;\r\n    top: 40%;\r\n    max-width: 300px;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n    list-style-type: none;\r\n    display: flex;\r\n    padding: 0px;\r\n`;\r\n\r\nconst Li = styled.li`\r\n    width: 47.5%;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Options for main page.  Can view shopping list or add recipes to shopping list\r\n\r\n    PARAMS: \r\n        togglePopUpFunc: togle the shopping list popup window\r\n\r\n*/\r\nexport const Options = ({ togglePopUpFunc }) => {\r\n    // Context\r\n    const { setCreateShoppingListBool, creatingShoppingList, saveAddedRecipes } = useContext(GlobalContext);\r\n\r\n    // Options for main page\r\n    return (\r\n        <Div>\r\n            <Button middle clicked={creatingShoppingList} onClick={togglePopUpFunc}>\r\n                View Shopping List\r\n            </Button>\r\n            <Button middle clicked={creatingShoppingList} onClick={() => setCreateShoppingListBool(\"close\")}>\r\n                Add To Shopping List\r\n            </Button>\r\n            {creatingShoppingList ? (\r\n                <Ul>\r\n                    <Li>\r\n                        <Button bottom onClick={saveAddedRecipes}>\r\n                            Save\r\n                        </Button>\r\n                    </Li>\r\n                    <Li>\r\n                        <Button bottom onClick={() => setCreateShoppingListBool(\"cancel\")}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Li>\r\n                </Ul>\r\n            ) : null}\r\n        </Div>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { Wrapper, Button } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst ExitButton = styled.button`\r\n    float: right;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n    color: #000;\r\n    text-shadow: 0 1px 0 #fff;\r\n    opacity: 0.5;\r\n    background-color: Transparent;\r\n    border: none;\r\n    outline: none;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Exit, Clear, or Download shopping lit\r\n\r\n    PARAMS: \r\n        togglePopUpFunc: Close shoppinglist popup\r\n        downloadShoppingListFunc: download current ingredients in shoppinglist\r\n        setClearSwitchFunc: Clear shoppinglist ingredients\r\n*/\r\nexport const ShoppingListOptions = ({ togglePopUpFunc, downloadShoppingListFunc, setClearSwitchFunc }) => {\r\n    // State\r\n    const { clearShoppingList } = useContext(GlobalContext);\r\n\r\n    // Functions\r\n    // Exit, download, save\r\n    const handleClick = (call) => {\r\n        if (call === \"exit\") {\r\n            togglePopUpFunc();\r\n        } else if (call === \"download\") {\r\n            downloadShoppingListFunc();\r\n        } else if (call === \"clear\") {\r\n            clearShoppingList();\r\n            setClearSwitchFunc();\r\n        }\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <ExitButton onClick={() => handleClick(\"exit\")}>&times;</ExitButton>\r\n            <Button isShoppingListOption onClick={() => handleClick(\"download\")}>\r\n                Download\r\n            </Button>\r\n            {/* <Button isShoppingListOption>Save</Button> */}\r\n            <Button isShoppingListOption onClick={() => handleClick(\"clear\")}>\r\n                Clear\r\n            </Button>\r\n        </Wrapper>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { List, Wrapper } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Span = styled.span`\r\n    ${(props) =>\r\n        props.lineThrough === true &&\r\n        `\r\n        color: red;\r\n        text-decoration: line-through;\r\n    `};\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        display ingredient and on click make red line through ingredient name\r\n\r\n    PARAMS: \r\n        ingredient: grocery section ingredient name\r\n*/\r\nexport const ShoppingListIngredient = ({ ingredient }) => {\r\n    // State\r\n    const [active, setActive] = useState(false);\r\n\r\n    return (\r\n        <List key={ingredient} isShoppingList>\r\n            <Span lineThrough={active}>\r\n                <Wrapper>{ingredient}</Wrapper>\r\n            </Span>\r\n            <button className=\"float-right btn btn-danger btn-sm\" onClick={() => setActive(!active)}>\r\n                X\r\n            </button>\r\n        </List>\r\n    );\r\n};\r\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { ShoppingListIngredient } from \"./ShoppingListIngredient\";\r\nimport { List, AccordionButton, Input, AccordionContent } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Wrapper = styled.div`\r\n    margin: auto;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Display grocery sections in shopping list.\r\n        Display ingredients in accordion content.\r\n            display add ingredient at end \r\n\r\n    PARAMS: \r\n        sectionName: grocery section name\r\n        section: list of ingredients in grocery section\r\n        clearSwitch: bool updated when user hits clear shopping list\r\n\r\n*/\r\nexport const ShoppingListGrocerySection = ({ sectionName, section, clearSwitch }) => {\r\n    // Context\r\n    const { addIngredientToShoppingListSection } = useContext(GlobalContext);\r\n\r\n    // State\r\n    const [setActive, setActiveState] = useState(\"active\");\r\n    const [setHeight, setHeightState] = useState(\"0px\");\r\n    const [newIngredient, setNewIngredient] = useState(\"\");\r\n    const [placeHolderText, setPlaceHolderText] = useState(`Enter ${sectionName}...`);\r\n\r\n    // Window\r\n    const content = useRef(null);\r\n\r\n    // Functions\r\n    // Open or close accordion content\r\n    const toggleAccordion = (props) => {\r\n        setActiveState(setActive === \"\" ? \"active\" : \"\");\r\n        setHeightState(setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`);\r\n    };\r\n\r\n    // Create new ingredient, update accordion content height, reset new ingredient\r\n    const handleOnClick = () => {\r\n        if (newIngredient.length === 0) {\r\n            return;\r\n        }\r\n        addIngredientToShoppingListSection(sectionName, newIngredient);\r\n        setHeightState(`${content.current.scrollHeight + 36}px`);\r\n        setNewIngredient(\"\");\r\n    };\r\n\r\n    // Hit enter for new ingredient\r\n    const handleKeyDown = (key) => {\r\n        if (key === \"Enter\") {\r\n            handleOnClick();\r\n        }\r\n    };\r\n\r\n    // When clearSwitch is updated if there are no ingredients reset height to only dipslay new ingredient form\r\n    useEffect(() => {\r\n        if (section.length === 0) {\r\n            setHeightState(\"56px\");\r\n        } else {\r\n            setHeightState(`${content.current.scrollHeight}px`);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [clearSwitch]);\r\n\r\n    //\r\n    return (\r\n        <>\r\n            <AccordionButton isShoppingList onClick={toggleAccordion}>\r\n                <List active={setActive} isGrocerySectionHeader key={sectionName} ingredientCount={section.length}>\r\n                    {sectionName}\r\n                </List>\r\n            </AccordionButton>\r\n            <AccordionContent ref={content} maxHeight={setHeight}>\r\n                <ul>\r\n                    {section.map((ingredient, index) => (\r\n                        <ShoppingListIngredient key={`${index}-${ingredient._id}`} ingredient={ingredient.name} />\r\n                    ))}\r\n                    <List isShoppingListIngredient isForm>\r\n                        <Input\r\n                            onKeyDown={(e) => handleKeyDown(e.key)}\r\n                            isShoppingListIngredient\r\n                            value={newIngredient}\r\n                            onChange={(e) => setNewIngredient(e.target.value)}\r\n                            placeholder={placeHolderText}\r\n                        />\r\n                        <Wrapper>\r\n                            <button className=\"float-right btn btn-success btn-sm\" onClick={handleOnClick}>\r\n                                +\r\n                            </button>\r\n                        </Wrapper>\r\n                    </List>\r\n                </ul>\r\n            </AccordionContent>\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { ShoppingListOptions } from \"./ShoppingListOptions\";\r\nimport { ShoppingListGrocerySection } from \"./ShoppingListGrocerySection\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst ShoppingListDiv = styled.div`\r\n    position: fixed;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst ShoppingListContent = styled.div`\r\n    background-color: white;\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 30%;\r\n    width: 40%;\r\n    min-width: 450px;\r\n    max-height: 80%;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    border: 2px solid black;\r\n    overflow-y: scroll;\r\n`;\r\nconst Ul = styled.ul`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Shopping list popup in front of main page.\r\n        Map grocery sections and ingredients to component.\r\n        Display options component.\r\n\r\n    PARAMS: \r\n        togglePopUpFunc: pass through to close shoppinglist popup\r\n\r\n*/\r\nexport const ShoppingListPopUp = ({ togglePopUpFunc }) => {\r\n    // Context\r\n    const { shoppingList } = useContext(GlobalContext);\r\n\r\n    //State\r\n    const [clearSwitch, setClearSwitch] = useState(false);\r\n\r\n    // Variables\r\n    const grocerySectionIngredientsMap = shoppingList.grocerySectionIngredientsMap;\r\n\r\n    // Functions\r\n    // On hitting clear set switch to !switch\r\n    const setClearSwtichParrent = () => {\r\n        setClearSwitch(!clearSwitch);\r\n    };\r\n\r\n    // Download shopping list in plain text from server\r\n    async function downloadShoppingList() {\r\n        const errors = [];\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: \"blob\",\r\n            params: {\r\n                grocerySectionIngredientsMap: grocerySectionIngredientsMap,\r\n            },\r\n        };\r\n\r\n        try {\r\n            await axios.get(\"/api/v1/shoppingList/download\", config).then((response) => {\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement(\"a\");\r\n                link.href = url;\r\n                link.setAttribute(\"download\", \"ShoppingList.txt\");\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            });\r\n        } catch (error) {\r\n            errors.push(error);\r\n        }\r\n    }\r\n\r\n    //\r\n    return (\r\n        <ShoppingListDiv>\r\n            <ShoppingListContent>\r\n                <ShoppingListOptions\r\n                    togglePopUpFunc={togglePopUpFunc}\r\n                    downloadShoppingListFunc={downloadShoppingList}\r\n                    setClearSwitchFunc={setClearSwtichParrent}\r\n                />\r\n\r\n                <h3>Shopping List</h3>\r\n                <Ul>\r\n                    {Object.entries(grocerySectionIngredientsMap).map(([name, section], index) =>\r\n                        // toJSON is being inserted at somepoint not sure where\r\n                        // prety sure its due to the fact that its a default dict\r\n                        name === \"toJSON\" ? null : <ShoppingListGrocerySection key={index} sectionName={name} section={section} clearSwitch={clearSwitch} />\r\n                    )}\r\n                </Ul>\r\n            </ShoppingListContent>\r\n        </ShoppingListDiv>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Header } from \"../components/MainPage/Header\";\r\nimport { RecipeList } from \"../components/MainPage/RecipeList\";\r\nimport { AddRecipe } from \"../components/MainPage/AddRecipe\";\r\nimport { Options } from \"../components/MainPage/Options\";\r\nimport { ShoppingListPopUp } from \"../components/MainPage/ShoppingListPopUp\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Container = styled.section`\r\n    margin: 30px auto;\r\n    width: 800px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Displays recipes and shopping list will popup infront\r\n\r\n    PARAMS: \r\n*/\r\nexport const MainPage = () => {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const togglePopUp = () => {\r\n        setShowPopUp(!showPopUp);\r\n    };\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container>\r\n                <Options togglePopUpFunc={togglePopUp} />\r\n\r\n                <RecipeList />\r\n                <AddRecipe />\r\n            </Container>\r\n            {showPopUp === true ? <ShoppingListPopUp togglePopUpFunc={togglePopUp} /> : null}\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n/*\r\n    SUMMARY:\r\n        If user attempts to access a route that does not exit display page\r\n\r\n    PARAMS: \r\n\r\n*/\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h2>404! Not Found.</h2>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n//Styled components\r\nconst HomeIcon = styled.svg`\r\n    width: 50px;\r\n    height: 50px;\r\n    float: right;\r\n    margin: 0px 50px 0px 10px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Home SVG for settings page   \r\n\r\n    PARAMS: \r\n\r\n*/\r\nexport const HomeSvg = () => {\r\n    return (\r\n        <HomeIcon viewBox=\"0 0 500 500\" preserveAspectRatio=\"xMidYMid meet\">\r\n            <g transform=\"translate(0.000000,512.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\">\r\n                <path\r\n                    d=\"M2360 4892 c-27 -10 -67 -39 -101 -73 -48 -48 -63 -57 -105 -63 -152\r\n                            -23 -264 -162 -250 -313 3 -34 12 -77 20 -97 19 -46 98 -130 136 -146 l30 -12\r\n                            0 -234 0 -234 385 0 385 0 0 240 0 240 38 19 c165 85 193 323 51 444 -43 37\r\n                            -118 67 -169 67 -21 0 -34 11 -58 48 -34 53 -89 96 -149 118 -52 18 -158 16\r\n                            -213 -4z\"\r\n                />\r\n                <path\r\n                    d=\"M2098 3633 c21 -195 176 -335 372 -335 200 0 349 133 376 335 l7 47\r\n                        -380 0 -381 0 6 -47z\"\r\n                />\r\n                <path\r\n                    d=\"M2356 3188 c10 -13 49 -57 86 -98 l67 -73 48 41 c70 59 138 131 130\r\n                        138 -3 3 -83 9 -178 12 l-173 5 20 -25z\"\r\n                />\r\n                <path\r\n                    d=\"M2130 3193 c-103 -18 -305 -68 -396 -98 -448 -147 -628 -391 -522\r\n                        -710 42 -127 149 -259 291 -359 96 -69 308 -174 473 -236 l141 -53 -92 -161\r\n                        -93 -161 -236 -3 -236 -2 0 -40 0 -40 -49 0 c-57 0 -81 -18 -81 -59 0 -39 17\r\n                        -51 77 -51 l53 0 0 -220 0 -220 610 0 610 0 0 220 0 220 55 0 c43 0 56 4 65\r\n                        19 28 53 -3 91 -73 91 l-47 0 0 40 0 40 -334 2 -334 3 84 145 83 145 95 0 c89\r\n                        0 97 2 137 30 24 17 55 53 73 85 27 49 31 64 31 135 0 86 -14 125 -64 178 -33\r\n                        36 -65 53 -170 89 -296 100 -482 197 -549 288 l-20 27 39 22 c37 21 39 21 39\r\n                        3 0 -24 135 -117 250 -171 47 -23 161 -68 253 -100 219 -77 273 -120 318 -246\r\n                        55 -157 -19 -347 -165 -423 -40 -20 -66 -26 -121 -26 -38 -1 -86 3 -106 7\r\n                        l-36 9 -40 -69 -41 -68 314 -3 314 -2 0 -40 c0 -37 2 -40 28 -40 56 0 101 -47\r\n                        102 -107 0 -51 -40 -97 -95 -107 l-35 -7 0 -204 0 -205 180 0 180 0 0 892 0\r\n                        892 34 -33 c42 -40 80 -116 102 -201 13 -49 16 -98 14 -200 -7 -319 -8 -313\r\n                        22 -357 73 -111 282 -119 391 -15 73 69 97 166 97 382 -1 257 -59 466 -180\r\n                        645 -133 197 -318 319 -575 380 -176 42 -157 47 -294 -89 l-120 -119 103 -111\r\n                        102 -111 -39 -34 -38 -35 -22 27 c-12 14 -125 138 -251 276 -242 265 -232 257\r\n                        -306 244z\"\r\n                />\r\n                <path\r\n                    d=\"M1412 1939 c-73 -71 -65 -150 23 -251 61 -70 69 -104 34 -139 -28\r\n                        -28 -18 -34 24 -14 79 37 74 113 -14 214 -57 64 -67 106 -40 166 11 26 21 49\r\n                        21 51 0 12 -20 0 -48 -27z\"\r\n                />\r\n                <path\r\n                    d=\"M1810 1610 l0 -140 48 0 47 0 52 89 c29 48 53 94 55 101 2 9 -31 27\r\n                        -92 51 -52 21 -98 39 -102 39 -5 0 -8 -63 -8 -140z\"\r\n                />\r\n                <path d=\"M960 455 l0 -245 1520 0 1520 0 0 245 0 245 -1520 0 -1520 0 0 -245z\" />\r\n            </g>\r\n        </HomeIcon>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HomeSvg } from \"../SVG/HomeSvg\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    background-color: ${(props) => (props.clicked === true ? \"#8171d1\" : \"#9c88ff\")};\r\n    box-shadow: var(--box-shadow);\r\n    color: #fff;\r\n    border: 0;\r\n    font-size: 14px;\r\n    padding: 5px;\r\n    margin: ${(props) => (props.top ? \"10px 5px 20px 5px\" : \"5px 5px 0px 5px\")};\r\n    width: 90%;\r\n    &:hover {\r\n        background-color: #8171d1;\r\n    }\r\n    text-align: center;\r\n    ${(props) =>\r\n        props.isLink\r\n            ? `\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        `\r\n            : \"\"};\r\n`;\r\n\r\nconst Div = styled.div`\r\n    position: fixed;\r\n    left: 0px;\r\n    top: 40%;\r\n    max-width: 300px;\r\n    min-width: 250px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Settings options to go home or switch between settings pages        \r\n\r\n    PARAMS: \r\n        settingLabels: different settings names\r\n        selectSettingPage: pass through the option selected\r\n\r\n*/\r\nexport const Options = ({ settingLabels, selectSettingPage }) => {\r\n    return (\r\n        <Div>\r\n            <Link to=\"/\">\r\n                <Button top isLink>\r\n                    <HomeSvg />\r\n                    Home\r\n                </Button>\r\n            </Link>\r\n            {settingLabels.map((label) => (\r\n                <Button key={label} bottom onClick={() => selectSettingPage(label)}>\r\n                    {label}\r\n                </Button>\r\n            ))}\r\n        </Div>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { List, Wrapper } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst ButtonWrapper = styled.div`\r\n    float: right;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    margin-right: 10px;\r\n    color: blue;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    margin-right: 10px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Display grocery section name and whether its default.\r\n        Allow delete section        \r\n\r\n    PARAMS: \r\n        sectionLabel: grocery section name\r\n        _id: shoppingList._id\r\n        isDefault: is default grocery section\r\n        setErrorsFunc: errors to display if failed new section validation\r\n        defaultSection: default section name\r\n\r\n*/\r\nexport const GrocerySection = ({ sectionLabel, _id, isDefault, setErrorsFunc, defaultSection }) => {\r\n    const { deleteGrocerySection, setDefaultGrocerySection } = useContext(GlobalContext);\r\n\r\n    const handleOnChange = () => {\r\n        // Only let them select a new default\r\n        if (isDefault) {\r\n            return;\r\n        }\r\n        setDefaultGrocerySection(_id, sectionLabel);\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n        if (isDefault) {\r\n            setErrorsFunc([\"Cannot delete default section.\"]);\r\n            return;\r\n        }\r\n        setErrorsFunc([]);\r\n        deleteGrocerySection(_id, sectionLabel, defaultSection);\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <List isGrocerySection>\r\n                <h5>{sectionLabel}</h5>\r\n                <ButtonWrapper>\r\n                    {isDefault ? <Label>Default</Label> : null}\r\n                    <Input type=\"checkbox\" checked={isDefault ? true : false} onChange={handleOnChange} />\r\n                    <button className=\"float-right btn btn-danger btn-sm\" onClick={handleOnClick}>\r\n                        &times;\r\n                    </button>\r\n                </ButtonWrapper>\r\n            </List>\r\n        </Wrapper>\r\n    );\r\n};\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { GrocerySection } from \"./GrocerySection\";\r\nimport { H3, List, Input } from \"../../elements/index\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Ul = styled.ul`\r\n    padding-left: 3%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    margin: auto;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Map grocery sections to components\r\n        Create new sections\r\n        Set default section               \r\n    PARAMS: \r\n        \r\n\r\n*/\r\nexport const SetUpGrocerySections = () => {\r\n    // Context\r\n    const { grocerySections, getGrocerySections, addGrocerySection } = useContext(GlobalContext);\r\n\r\n    // State\r\n    const [grocerySection, setGrocerySection] = useState(\"\");\r\n    const [placeHolderText, setPlaceHolderText] = useState(\"Enter Grocery Section...\");\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    // Functions\r\n    // get current section from db\r\n    useEffect(() => {\r\n        getGrocerySections();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Create new section\r\n    const handleOnClick = () => {\r\n        let errs = [];\r\n        if (grocerySection.length === 0) {\r\n            setPlaceHolderText(\"Enter Grocery Section...\");\r\n            return;\r\n        }\r\n        let foundMatch = false;\r\n        grocerySections.sections.forEach((section) => {\r\n            if (section.toLowerCase() === grocerySection.toLowerCase()) {\r\n                setGrocerySection(\"\");\r\n                setPlaceHolderText(\"Section Names Must Be Unique\");\r\n                errs.push(\"Section Names Must Be Unique\");\r\n                foundMatch = true;\r\n                return;\r\n            }\r\n        });\r\n        setErrors(errs);\r\n        if (foundMatch) return;\r\n        addGrocerySection(grocerySections._id, grocerySection);\r\n        setGrocerySection(\"\");\r\n    };\r\n\r\n    // allow enter to create section\r\n    const handleKeyDown = (key) => {\r\n        if (key === \"Enter\") {\r\n            handleOnClick();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <H3>Grocery Sections</H3>\r\n            {errors.map((error) => (\r\n                <p className=\"error\" key={error}>\r\n                    {error}\r\n                </p>\r\n            ))}\r\n            <Ul>\r\n                {grocerySections.sections.map((section) => (\r\n                    <GrocerySection\r\n                        key={section}\r\n                        sectionLabel={section}\r\n                        _id={grocerySections._id}\r\n                        isDefault={section === grocerySections.default}\r\n                        defaultSection={grocerySections.default}\r\n                        setErrorsFunc={setErrors}\r\n                    />\r\n                ))}\r\n                <List>\r\n                    <Input\r\n                        onKeyDown={(e) => handleKeyDown(e.key)}\r\n                        isGrocerySection\r\n                        value={grocerySection}\r\n                        onChange={(e) => setGrocerySection(e.target.value)}\r\n                        placeholder={placeHolderText}\r\n                    />\r\n                    <Wrapper>\r\n                        <button className=\"float-right btn btn-success btn-sm\" onClick={handleOnClick}>\r\n                            +\r\n                        </button>\r\n                    </Wrapper>\r\n                </List>\r\n            </Ul>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { H3, H4 } from \"../../elements/index\";\r\n\r\n/*\r\n    TODO: allow edit user settings/preferences\r\n\r\n*/\r\nexport const UserSettings = () => {\r\n    return (\r\n        <>\r\n            <H3>User Settings</H3>\r\n            <H4>TODO</H4>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Options } from \"../components/Settings/Options\";\r\nimport { SetUpGrocerySections } from \"../components/Settings/SetUpGrocerySections\";\r\nimport { UserSettings } from \"../components/Settings/UserSettings\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled Components\r\nconst Container = styled.section`\r\n    margin: 30px auto;\r\n    width: 600px;\r\n`;\r\n\r\n/*\r\n    SUMMARY:\r\n        Page to allow user to update user preferences and add/delete grocery sections\r\n\r\n    PARAMS: \r\n\r\n*/\r\nexport const Settings = () => {\r\n    const settingsMap = { \"Grocery Store Sections\": <SetUpGrocerySections />, \"User Settings\": <UserSettings /> };\r\n    const [activeOption, setActiveOption] = useState(\"Grocery Store Sections\");\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Options settingLabels={Object.keys(settingsMap)} selectSettingPage={setActiveOption} />\r\n                {settingsMap[activeOption]}\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\"; // Styled components used instead\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { MainPage } from \"./pages/MainPage\";\r\nimport { NotFound } from \"./pages/404\";\r\nimport { Settings } from \"./pages/Settings\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: #f7f7f7;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    min-width: 1400px;\r\n    margin: 0;\r\n    font-family: \"Lato\", sans-serif;\r\n  }\r\n\r\n  :root {\r\n    --box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    } \r\n    .error {\r\n    color: #c0392b;\r\n}\r\n\r\n`;\r\n\r\n// App pages:\r\n//      Main Page - View/add/edit recipes and shoppinglist\r\n//      Settings  - Update grocery sections / user settings (to come)\r\nfunction App() {\r\n    return (\r\n        <GlobalProvider>\r\n            <GlobalStyle />\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={MainPage} />\r\n                    <Route exact path=\"/settings\" component={Settings} />\r\n                    <Route exact path=\"/404\" component={NotFound} />\r\n                    <Redirect to=\"/404\" />\r\n                </Switch>\r\n            </Router>\r\n        </GlobalProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}